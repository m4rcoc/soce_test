// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver');
const assert = require('assert');

'use strict';

let data = require('../constants.json');

console.log("Running Selenium script...\n");

function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

(async function example() {
  let driver = await new Builder().forBrowser('firefox').build();
  try {
		
    //https://github.com/substack/minimist Usage !!

    var argv = require('minimist')(process.argv.slice(2));
    //console.log("../REPORTS/"+argv.output_path);
    
    const execSync_1 = require('child_process').execSync;
    const output_1 = execSync_1("echo kali | sudo -S ./recording_modes/clear_continuous_pcaps.sh "+data.username+" "+data.password+" "+data.ip, { encoding: 'utf-8' });  // the default is 'buffer'    
    
    
    try { await driver.get("http://"+data.user_basic+":"+data.pass_basic+"@"+data.ip+"/") } catch(err) { throw err }
    await driver.manage().window().setRect(1918, 921)
    await (await driver.wait(until.elementLocated(By.css("li.bigger:nth-child(10) > a:nth-child(1) > span:nth-child(2)")),2000)).click()
    //await sleep(7000); 
    
    await (await driver.wait(until.elementLocated(By.id("status_recorder")),20000)) //esperamos hasta que el valor pase a recording --> primero suele estar en unknown luego initializating y despues stopped
    {
      while  (await driver.findElement(By.id("status_recorder")).getText() !="Stopped")
      {
              await sleep(500)            
      }
    }

    await (await driver.wait(until.elementLocated(By.id("start_recorder")),2000)).click()

    const execSync_2 = require('child_process').execSync;
    const output_2 = execSync_2("echo kali | sudo -S touch /usr/local/start", { encoding: 'utf-8' });      

    await sleep(5000);
    await (await driver.wait(until.elementLocated(By.id("stop_recorder")),2000)).click()
    await sleep(3000);
    await (await driver.wait(until.elementLocated(By.css("li.unappend:nth-child(9) > span:nth-child(2)")),2000)).click()
    await (await driver.wait(until.elementLocated(By.css("#table_store_records > tbody:nth-child(1) > tr:nth-child(2) > td:nth-child(3) > span:nth-child(1) > i:nth-child(1)")),2000)).click()
    
    const execSync_3 = require('child_process').execSync;
    const output_3 = execSync_3("echo kali | sudo -S ./recording_modes/get_continuous_pcap.sh "+data.username+" "+data.password+" "+data.ip+" "+argv.output_path, { encoding: 'utf-8' });  // the default is 'buffer'


    //await (await driver.wait(until.elementLocated(By.xpath("//span[.='Downloads']")),2000)).click()
    await sleep(1000); 

       
  } finally {
    await driver.quit();
  }
})();
