#!/bin/bash

function preemption_reset(){

cat <<-EOF > cmds/${test_function}_dut_config_restore.cmd
echo $password | sudo -S cp /etc/soce_design/factory_config/SWITCH/preemption.json /etc/soce_configs/current/SWITCH/preemption.json
soce_cli
vlan reset SWITCH
frame_preemption reload_configuration SWITCH
ptp start  
EOF
}

#-----------------------------------------------------------------------------------------------------------------------------------------
# Test 802.1Qbu/802.3br.1  – Preemption frame assembling
#-----------------------------------------------------------------------------------------------------------------------------------------

function test_preemption_1_1(){
cat <<-EOF > cmds/${test_function}_dut_config.cmd
soce_cli
vlan set_vlan_port $port_0_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_1_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_2_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_3_config 1 0 0 trunk all tag-all original none none
frame_preemption enable_preemption $port_8_name
EOF
}
# OJO, el puerto 0 debe ser RGMII !!
# frame_preemption enable_preemption $port_0_config

function test_preemption_1_1_restore(){
    preemption_reset
}

function test_preemption_1_2(){
cat <<-EOF > cmds/${test_function}_dut_config.cmd
soce_cli
statistics get_rx_advanced_statistics $port_0_config
EOF
}

function test_preemption_1_2_restore(){
    preemption_reset
}

#-----------------------------------------------------------------------------------------------------------------------------------------
# Test 802.1Qbu/802.3br.2 – Preemption singular size traffic
#-----------------------------------------------------------------------------------------------------------------------------------------

function test_preemption_2_1(){
cat <<-EOF > cmds/${test_function}_dut_config.cmd
soce_cli
vlan set_vlan_port $port_0_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_1_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_2_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_3_config 1 0 0 trunk all tag-all original none none
frame_preemption enable_preemption $port_0_config
EOF
}

function test_preemption_2_1_restore(){
    preemption_reset
}

#-----------------------------------------------------------------------------------------------------------------------------------------
# Test 802.1Qbu/802.3br.3 – Preemption sequence error detection
#-----------------------------------------------------------------------------------------------------------------------------------------

function test_preemption_3_1(){
cat <<-EOF > cmds/${test_function}_dut_config.cmd
soce_cli
vlan set_vlan_port $port_0_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_1_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_2_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_3_config 1 0 0 trunk all tag-all original none none
frame_preemption enable_preemption $port_0_config
EOF
}

function test_preemption_3_1_restore(){
    preemption_reset
}

#-----------------------------------------------------------------------------------------------------------------------------------------
# Test 802.1Qbu/802.3br.4 – Preemption crc error detection
#-----------------------------------------------------------------------------------------------------------------------------------------

function test_preemption_4_1(){
cat <<-EOF > cmds/${test_function}_dut_config.cmd
soce_cli
vlan set_vlan_port $port_0_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_1_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_2_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_3_config 1 0 0 trunk all tag-all original none none
frame_preemption enable_preemption $port_0_config
EOF
}

function test_preemption_4_1_restore(){
    preemption_reset
}

#-----------------------------------------------------------------------------------------------------------------------------------------
# Test 802.1Qbu/802.3br.5 – Preemption tx conformance
#-----------------------------------------------------------------------------------------------------------------------------------------

# DUT 1

function test_preemption_5_1(){
cat <<-EOF > cmds/${test_function}_dut_config.cmd
soce_cli
ptp stop
vlan reset SWITCH
frame_preemption set_priority_queue_mode PORT_8 0 preemptible
frame_preemption set_priority_queue_mode PORT_8 7 express
frame_preemption set_priority_queue_mode PORT_9 0 preemptible
frame_preemption set_priority_queue_mode PORT_9 7 express
frame_preemption enable_preemption PORT_8
frame_preemption enable_preemption PORT_9
statistics reset_all_statistics SWITCH
EOF
}

# frame_preemption set_priority_queue_mode $port_2_config 0 preemptible
# frame_preemption set_priority_queue_mode $port_2_config 7 express
# frame_preemption set_priority_queue_mode $port_3_config 0 preemptible
# frame_preemption set_priority_queue_mode $port_3_config 7 express
# frame_preemption enable_preemption $port_2_config
# frame_preemption enable_preemption $port_3_config
# statistics reset_all_statistics SWITCH

function test_preemption_5_1_restore(){
    preemption_reset
}

# DUT 2

function test_preemption_5_2(){
cat <<-EOF > cmds/${test_function}_dut_config.cmd
soce_cli
ptp stop
vlan reset SWITCH
frame_preemption enable_preemption $port_0_config
statistics reset_all_statistics SWITCH 
EOF
}

# function test_preemption_5_2_restore(){
#     preemption_reset
# }

# DUT 1

function test_preemption_5_3(){
cat <<-EOF > cmds/${test_function}_dut_config.cmd
soce_cli
vlan reset SWITCH
statistics get_tx_advanced_statistics $port_3_config
EOF
}

# function test_preemption_5_3_restore(){
#     preemption_reset
# }

# DUT 2

function test_preemption_5_4(){
cat <<-EOF > cmds/${test_function}_dut_config.cmd
soce_cli
vlan reset SWITCH
statistics get_rx_advanced_statistics $port_0_config
EOF
}

# function test_preemption_5_4_restore(){
#     preemption_reset
# }

#-----------------------------------------------------------------------------------------------------------------------------------------
# Test 802.1Qbu/802.3br.6 – Preemption + Qbv Conformance Test
#-----------------------------------------------------------------------------------------------------------------------------------------

# port_2 -> port_8_name
# port_3 -> port_9_name


# vlan set_vlan_port $port_0_config 1 0 0 trunk all tag-all original none none
# vlan set_vlan_port $port_1_config 1 0 0 trunk all tag-all original none none
# vlan set_vlan_port $port_2_config 1 0 0 trunk all tag-all original none none
# vlan set_vlan_port $port_3_config 1 0 0 trunk all tag-all original none none


function test_preemption_6_1(){
cat <<-EOF > cmds/${test_function}_dut_config.cmd
soce_cli
ieee8021qbv change_current_configuration $port_8_name test_preemption_6_1.json
ieee8021qbv change_current_configuration $port_9_name test_preemption_6_1.json
frame_preemption set_priority_queue_mode $port_8_name 0 preemptible
frame_preemption set_priority_queue_mode $port_8_name 7 express
frame_preemption set_priority_queue_mode $port_9_name 0 preemptible
frame_preemption set_priority_queue_mode $port_9_name 7 express
frame_preemption enable_preemption $port_8_name
frame_preemption enable_preemption $port_9_name
EOF
}

# 6_2 = (enable preemption,Priority 7 express,Priority 0 preemptable) on PORT 0 of DUT 2 + 

function test_preemption_6_2(){
cat <<-EOF > cmds/${test_function}_dut_config.cmd
soce_cli
vlan set_vlan_port $port_0_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_1_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_2_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_3_config 1 0 0 trunk all tag-all original none none
frame_preemption set_priority_queue_mode $port_8_name 0 preemptible
frame_preemption set_priority_queue_mode $port_8_name 7 express
frame_preemption enable_preemption $port_8_name
EOF
}

# 6_3 = read preemption stats of DUT - PORT 9

function test_preemption_6_3(){
cat <<-EOF > cmds/${test_function}_dut_config.cmd
soce_cli
vlan set_vlan_port $port_0_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_1_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_2_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_3_config 1 0 0 trunk all tag-all original none none
statistics get_rx_advanced_statistics $port_9_name
EOF
}

# 6_4 = read preemption stats of DUT 2 - PORT 0

function test_preemption_6_4(){
cat <<-EOF > cmds/${test_function}_dut_config.cmd
soce_cli
vlan set_vlan_port $port_0_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_1_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_2_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_3_config 1 0 0 trunk all tag-all original none none
statistics get_rx_advanced_statistics $port_8_name
EOF
}

#------------------------------------------------------------

function test_preemption_6_5(){
cat <<-EOF > cmds/${test_function}_dut_config.cmd
soce_cli
vlan set_vlan_port $port_0_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_1_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_2_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_3_config 1 0 0 trunk all tag-all original none none
ieee8021qbv change_current_configuration $port_9_name test_preemption_6_5.json
frame_preemption set_priority_queue_mode $port_8_name 0 preemptible
frame_preemption set_priority_queue_mode $port_8_name 7 express
frame_preemption set_priority_queue_mode $port_9_name 0 preemptible
frame_preemption set_priority_queue_mode $port_9_name 7 express
frame_preemption enable_release_and_hold $port_9_name
frame_preemption enable_preemption $port_8_name
frame_preemption enable_preemption $port_9_name
EOF
}

function test_preemption_6_6(){
cat <<-EOF > cmds/${test_function}_dut_config.cmd
soce_cli
vlan set_vlan_port $port_0_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_1_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_2_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_3_config 1 0 0 trunk all tag-all original none none
frame_preemption enable_preemption $port_8_name
EOF
}

function test_preemption_6_7(){
cat <<-EOF > cmds/${test_function}_dut_config.cmd
soce_cli
vlan set_vlan_port $port_0_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_1_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_2_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_3_config 1 0 0 trunk all tag-all original none none
statistics get_rx_advanced_statistics $port_9_name
EOF
}

function test_preemption_6_8(){
cat <<-EOF > cmds/${test_function}_dut_config.cmd
soce_cli
vlan set_vlan_port $port_0_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_1_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_2_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_3_config 1 0 0 trunk all tag-all original none none
statistics get_rx_advanced_statistics $port_8_name
EOF
}
