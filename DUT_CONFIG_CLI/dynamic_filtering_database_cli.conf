#!/bin/bash

#-----------------------------------------------------------------------------------------------------------------------------------------
# Test Dynamic Filtering Database.3 – Independent VLAN Learning (IVL)
#-----------------------------------------------------------------------------------------------------------------------------------------

function test_dynamic_filtering_database_3_1(){

cat <<-EOF > cmds/${test_function}_dut_config.cmd
soce_cli
vlan set_vlan_port $port_0_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_1_config 1 0 0 trunk all tag-all original none none

vlan set_vlan_entry SWITCH 2 2 $port_0_config,$port_1_config,$port_2_config,INTERNAL_PORT ""
vlan set_vlan_entry SWITCH 3 3 $port_0_config,$port_1_config,$port_2_config,INTERNAL_PORT ""
mac_address_table set_static_entry SWITCH 00:00:03:00:00:01 1 $port_2_config
vlan set_vlan_port $port_2_config 1 0 0 trunk all tag-all original none none
EOF
}

function test_dynamic_filtering_database_3_1_tsnpcie(){
cat <<-EOF > cmds/${test_function}_dut_config.cmd
soce_cli
vlan set_vlan_port $port_0_config 1 0 0 trunk all tag-all original none none
vlan set_vlan_port $port_1_config 1 0 0 trunk all tag-all original none none

vlan set_vlan_entry SWITCH 2 2 $port_0_config,$port_1_config,$port_2_config ""
vlan set_vlan_entry SWITCH 3 3 $port_0_config,$port_1_config,$port_2_config ""
mac_address_table set_static_entry SWITCH 00:00:03:00:00:01 1 $port_2_config
EOF

}

function test_dynamic_filtering_database_4_1_tsnpcie(){
cat <<-EOF > cmds/${test_function}_dut_config.cmd
soce_cli

mac_address_table set_static_entry SWITCH 00:bb:bb:bb:bb:bb 1 $port_2_config
EOF

}
function test_dynamic_filtering_database_4_1_restore_tsnpcie(){
cat <<-EOF > cmds/${test_function}_dut_config_restore.cmd
soce_cli

mac_address_table delete_static_entry SWITCH 00:BB:BB:BB:BB:BB 1
EOF

}
#-----------------------------------------------------------------------------------------------------------------------------------------
# Test Dynamic Filtering Database.5 – New Entry Prevented due to Static Filtering Entry
#-----------------------------------------------------------------------------------------------------------------------------------------

function test_dynamic_filtering_database_5_1(){

cat <<-EOF > cmds/${test_function}_dut_config.cmd
soce_cli
mac_address_table set_static_entry SWITCH 00:00:02:00:00:01 1 $port_2_config
EOF
}
function test_dynamic_filtering_database_5_1_tsnpcie(){

cat <<-EOF > cmds/${test_function}_dut_config.cmd
soce_cli
mac_address_table set_static_entry SWITCH 00:00:02:00:00:01 1 $port_2_config
EOF
}
function test_dynamic_filtering_database_5_1_restore(){
cat <<-EOF > cmds/${test_function}_dut_config_restore.cmd
soce_cli

mac_address_table delete_static_entry SWITCH 00:00:02:00:00:01 1
EOF

}

#-----------------------------------------------------------------------------------------------------------------------------------------
# Test Dynamic Filtering Database.7 – All Dynamic MAC Address Flushing
#-----------------------------------------------------------------------------------------------------------------------------------------

function test_dynamic_filtering_database_7_1(){

cat <<-EOF > cmds/${test_function}_dut_config.cmd
soce_cli
mac_address_table delete_all_dynamic_entries SWITCH
EOF
}

#-----------------------------------------------------------------------------------------------------------------------------------------
# Test Dynamic Filtering Database.8 – Dynamic MAC Address Flushing on Specific Port
#-----------------------------------------------------------------------------------------------------------------------------------------

function test_dynamic_filtering_database_8_1(){

cat <<-EOF > cmds/${test_function}_dut_config.cmd
soce_cli
mac_address_table delete_port_entries $port_1_config
EOF
}


