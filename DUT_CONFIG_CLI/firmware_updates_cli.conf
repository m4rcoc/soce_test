#!/bin/bash

#-----------------------------------------------------------------------------------------------------------------------------------------
#  Test Recovery & Firmware Update.1 – System updates
#-----------------------------------------------------------------------------------------------------------------------------------------

function test_firmware_updates_1_1(){

cat <<-EOF > cmds/${test_function}_dut_config.cmd
soce_cli
sys_mgmt patch_firmware fix_testing_image_${model}_${version}.bin
sys_mgmt reboot
EOF
#sys_mgmt patch_firmware $patch_name
#sys_mgmt reboot

# soce_analyzer:
#printf "\nWait until DUT ( ${ip} ) is available ..."
#check_ping
}

#-----------------------------------------------------------------------------------------------------------------------------------------
#  Test Recovery & Firmware Update.2 – System upgrades
#-----------------------------------------------------------------------------------------------------------------------------------------

function test_firmware_updates_2_1(){


cat <<-EOF > cmds/${test_function}_dut_config.cmd
soce_cli
sys_mgmt upgrade_from_local
sys_mgmt reboot
EOF

# soce_analyzer:
#printf "\nWait until DUT ( ${ip} ) is available ..."
#check_ping
}



# Auxiliar functions:


function check_ping(){

((count = 1000))                           # Maximum number to try.
while [[ $count -ne 0 ]] ; do
    ping -c 1 $ip > /dev/null 2>&1                       # Try once.
    rc=$?
    if [[ $rc -eq 0 ]] ; then
        ((count = 1))                    # If okay, flag loop exit.
    else
        sleep 1                          # Minimize network storm.
    fi
    ((count = count - 1))                # So we don't go forever.
done

date_aux=$(date +"%Y_%m_%d")

if [[ $rc -eq 0 ]] ; then                # Make final determination.
    printf "DUT is available. Check the report of last upgrade (/var/log/last_upgrade.log) or /REPORTS/firmware_updates/test_firmware_updates_2_1_"
else
    printf "No ping after 1000 sec (~16min)..."
fi    
}

